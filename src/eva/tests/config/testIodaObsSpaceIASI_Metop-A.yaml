diagnostics:
- data:
    type: IodaObsSpace
    datasets:
      - name: experiment
        filenames:
          - ${data_input_path}/ioda_obs_space.iasi_metop-a.hofx.2021-08-01T000000Z.nc4
        channels: [16, 29, 32, 35, 38, 41, 44, 47, 49, 50, 51, 53, 55, 56, 57, 59, 61, 62, 63, 66, 68,
                   70, 72, 74, 76, 78, 79, 81, 82, 83, 84, 85, 86, 87, 89, 92, 93, 95, 97, 99, 101, 103,
                   104, 106, 109, 110, 111, 113, 116, 119, 122, 125, 128, 131, 133, 135, 138, 141, 144,
                   146, 148, 150, 151, 154, 157, 159, 160, 161, 163, 167, 170, 173, 176, 179, 180, 185,
                   187, 191, 193, 197, 199, 200, 202, 203, 205, 207, 210, 212, 213, 214, 217, 218, 219,
                   222, 224, 225, 226, 228, 230, 231, 232, 236, 237, 239, 243, 246, 249, 252, 254, 259,
                   260, 262, 265, 267, 269, 275, 279, 282, 285, 294, 296, 299, 300, 303, 306, 309, 313,
                   320, 323, 326, 327, 329, 332, 335, 345, 347, 350, 354, 356, 360, 363, 366, 371, 372,
                   373, 375, 377, 379, 381, 383, 386, 389, 398, 401, 404, 405, 407, 408, 410, 411, 414,
                   416, 418, 423, 426, 428, 432, 433, 434, 439, 442, 445, 450, 457, 459, 472, 477, 483,
                   509, 515, 546, 552, 559, 566, 571, 573, 578, 584, 594, 625, 646, 662, 668, 705, 739,
                   756, 797, 867, 906, 921, 1027, 1046, 1090, 1098, 1121, 1133, 1173]
        groups:
          - name: ObsValue
            variables: &variables ['brightnessTemperature']
          - name: GsiHofXBc
          - name: hofx
          - name: EffectiveQC
          - name: MetaData
            variables: ['sensorChannelNumber']
          - name: GsiEffectiveQC
          - name: GsiFinalObsError
          - name: EffectiveError
  transforms:

    # Stats for hofx
    - transform: channel_stats
      channel_dimension_name: 'Location'  # Just an example since Channel is the default
      statistic list: ['Mean', 'Count']
      variable_name: experiment::hofx::${variable}
      for:
        variable: *variables

    # Generate hofx that passed QC for GSI
    - transform: accept where
      new name: experiment::hofxPassedGSIQc::${variable}
      starting field: experiment::hofx::${variable}
      where:
        - experiment::GsiEffectiveQC::${variable} == 0
      for:
        variable: *variables

    # Stats for hofxPassedGSIQc
    - transform: channel_stats
      variable_name: experiment::hofxPassedGSIQc::${variable}
      for:
        variable: *variables

  graphics:

    # ---------- Statistical Plot ----------
    # JEDI h(x) vs GSI h(x)
    # -------------------------
    - figure:
        layout: [1,1]
        title: 'Mean HofX vs Channel'
        output name: hofx_vs_channel/iasi_metop-a/brightness_temperature/meanhofx_vs_channel.png
      plots:
        - add_xlabel: 'Channel'
          add_ylabel: 'JEDI HofX'
          add_grid:
          add_legend:
            loc: 'upper left'
          layers:
          - type: Scatter
            x:
              variable: experiment::MetaData::sensorChannelNumber
            y:
              variable: experiment::hofxMean::brightnessTemperature
            markersize: 5
            color: 'red'
            label: 'JEDI h(x) versus channels (all obs)'
            do_linear_regression: False
          - type: Scatter
            x:
              variable: experiment::MetaData::sensorChannelNumber
            y:
              variable: experiment::hofxPassedGSIQcMean::brightnessTemperature
            markersize: 5
            color: 'green'
            label: 'JEDI h(x) versus channels (passed GSI QC)'
            do_linear_regression: False

